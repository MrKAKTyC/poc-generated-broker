// Package model provides primitives to interact with the openapi HTTP API.
//
// Code generated by github.com/deepmap/oapi-codegen version v1.11.0 DO NOT EDIT.
package model

const (
	BasicAuthScopes = "basicAuth.Scopes"
)

// Defines values for LastOperationResourceState.
const (
	Failed     LastOperationResourceState = "failed"
	InProgress LastOperationResourceState = "in progress"
	Succeeded  LastOperationResourceState = "succeeded"
)

// Defines values for ServiceRequires.
const (
	RouteForwarding ServiceRequires = "route_forwarding"
	SyslogDrain     ServiceRequires = "syslog_drain"
	VolumeMount     ServiceRequires = "volume_mount"
)

// Defines values for ServiceBindingEndpointProtocol.
const (
	All ServiceBindingEndpointProtocol = "all"
	Tcp ServiceBindingEndpointProtocol = "tcp"
	Udp ServiceBindingEndpointProtocol = "udp"
)

// Defines values for ServiceBindingVolumeMountDeviceType.
const (
	Shared ServiceBindingVolumeMountDeviceType = "shared"
)

// Defines values for ServiceBindingVolumeMountMode.
const (
	R  ServiceBindingVolumeMountMode = "r"
	Rw ServiceBindingVolumeMountMode = "rw"
)

// AsyncOperation defines model for AsyncOperation.
type AsyncOperation struct {
	Operation *string `json:"operation,omitempty"`
}

// Catalog defines model for Catalog.
type Catalog struct {
	Services *[]Service `json:"services,omitempty"`
}

// See [Context Conventions](https://github.com/openservicebrokerapi/servicebroker/blob/master/profile.md#context-object) for more details.
type Context = map[string]interface{}

// DashboardClient defines model for DashboardClient.
type DashboardClient struct {
	Id          *string `json:"id,omitempty"`
	RedirectUri *string `json:"redirect_uri,omitempty"`
	Secret      *string `json:"secret,omitempty"`
}

// See [Service Broker Errors](https://github.com/openservicebrokerapi/servicebroker/blob/master/spec.md#service-broker-errors) for more details.
type Error struct {
	Description      *string `json:"description,omitempty"`
	Error            *string `json:"error,omitempty"`
	InstanceUsable   *bool   `json:"instance_usable,omitempty"`
	UpdateRepeatable *bool   `json:"update_repeatable,omitempty"`
}

// LastOperationResource defines model for LastOperationResource.
type LastOperationResource struct {
	Description      *string                    `json:"description,omitempty"`
	InstanceUsable   *bool                      `json:"instance_usable,omitempty"`
	State            LastOperationResourceState `json:"state"`
	UpdateRepeatable *bool                      `json:"update_repeatable,omitempty"`
}

// LastOperationResourceState defines model for LastOperationResource.State.
type LastOperationResourceState string

// MaintenanceInfo defines model for MaintenanceInfo.
type MaintenanceInfo struct {
	Description *string `json:"description,omitempty"`
	Version     string  `json:"version"`
}

// See [Service Metadata Conventions](https://github.com/openservicebrokerapi/servicebroker/blob/master/profile.md#service-metadata) for more details.
type Metadata = map[string]interface{}

// Object defines model for Object.
type Object = map[string]interface{}

// Plan defines model for Plan.
type Plan struct {
	Bindable               *bool            `json:"bindable,omitempty"`
	BindingRotatable       *bool            `json:"binding_rotatable,omitempty"`
	Description            string           `json:"description"`
	Free                   *bool            `json:"free,omitempty"`
	Id                     string           `json:"id"`
	MaintenanceInfo        *MaintenanceInfo `json:"maintenance_info,omitempty"`
	MaximumPollingDuration *int             `json:"maximum_polling_duration,omitempty"`

	// See [Service Metadata Conventions](https://github.com/openservicebrokerapi/servicebroker/blob/master/profile.md#service-metadata) for more details.
	Metadata       *Metadata `json:"metadata,omitempty"`
	Name           string    `json:"name"`
	PlanUpdateable *bool     `json:"plan_updateable,omitempty"`
	Schemas        *Schemas  `json:"schemas,omitempty"`
}

// Schemas defines model for Schemas.
type Schemas struct {
	ServiceBinding  *ServiceBindingSchema  `json:"service_binding,omitempty"`
	ServiceInstance *ServiceInstanceSchema `json:"service_instance,omitempty"`
}

// Service defines model for Service.
type Service struct {
	Bindable         bool             `json:"bindable"`
	BindingRotatable *bool            `json:"binding_rotatable,omitempty"`
	DashboardClient  *DashboardClient `json:"dashboard_client,omitempty"`
	Description      string           `json:"description"`
	Id               string           `json:"id"`

	// See [Service Metadata Conventions](https://github.com/openservicebrokerapi/servicebroker/blob/master/profile.md#service-metadata) for more details.
	Metadata       *Metadata          `json:"metadata,omitempty"`
	Name           string             `json:"name"`
	PlanUpdateable *bool              `json:"plan_updateable,omitempty"`
	Plans          []Plan             `json:"plans"`
	Requires       *[]ServiceRequires `json:"requires,omitempty"`
	Tags           *[]string          `json:"tags,omitempty"`
}

// ServiceRequires defines model for Service.Requires.
type ServiceRequires string

// ServiceBindingEndpoint defines model for ServiceBindingEndpoint.
type ServiceBindingEndpoint struct {
	Host     string                          `json:"host"`
	Ports    []string                        `json:"ports"`
	Protocol *ServiceBindingEndpointProtocol `json:"protocol,omitempty"`
}

// ServiceBindingEndpointProtocol defines model for ServiceBindingEndpoint.Protocol.
type ServiceBindingEndpointProtocol string

// ServiceBindingMetadata defines model for ServiceBindingMetadata.
type ServiceBindingMetadata struct {
	ExpiresAt   *string `json:"expires_at,omitempty"`
	RenewBefore *string `json:"renew_before,omitempty"`
}

// ServiceBindingRequest defines model for ServiceBindingRequest.
type ServiceBindingRequest struct {
	AppGuid      *string                      `json:"app_guid,omitempty"`
	BindResource *ServiceBindingResouceObject `json:"bind_resource,omitempty"`

	// See [Context Conventions](https://github.com/openservicebrokerapi/servicebroker/blob/master/profile.md#context-object) for more details.
	Context              *Context `json:"context,omitempty"`
	Parameters           *Object  `json:"parameters,omitempty"`
	PlanId               string   `json:"plan_id"`
	PredecessorBindingId *string  `json:"predecessor_binding_id,omitempty"`
	ServiceId            string   `json:"service_id"`
}

// ServiceBindingResouceObject defines model for ServiceBindingResouceObject.
type ServiceBindingResouceObject struct {
	AppGuid *string `json:"app_guid,omitempty"`
	Route   *string `json:"route,omitempty"`
}

// ServiceBindingResource defines model for ServiceBindingResource.
type ServiceBindingResource struct {
	Credentials     *Object                      `json:"credentials,omitempty"`
	Endpoints       *[]ServiceBindingEndpoint    `json:"endpoints,omitempty"`
	Metadata        *ServiceBindingMetadata      `json:"metadata,omitempty"`
	Parameters      *Object                      `json:"parameters,omitempty"`
	RouteServiceUrl *string                      `json:"route_service_url,omitempty"`
	SyslogDrainUrl  *string                      `json:"syslog_drain_url,omitempty"`
	VolumeMounts    *[]ServiceBindingVolumeMount `json:"volume_mounts,omitempty"`
}

// ServiceBindingResponse defines model for ServiceBindingResponse.
type ServiceBindingResponse struct {
	Credentials     *Object                      `json:"credentials,omitempty"`
	Endpoints       *[]ServiceBindingEndpoint    `json:"endpoints,omitempty"`
	Metadata        *ServiceBindingMetadata      `json:"metadata,omitempty"`
	RouteServiceUrl *string                      `json:"route_service_url,omitempty"`
	SyslogDrainUrl  *string                      `json:"syslog_drain_url,omitempty"`
	VolumeMounts    *[]ServiceBindingVolumeMount `json:"volume_mounts,omitempty"`
}

// ServiceBindingSchema defines model for ServiceBindingSchema.
type ServiceBindingSchema struct {
	Create *struct {
		Parameters *map[string]interface{} `json:"parameters,omitempty"`
	} `json:"create,omitempty"`
}

// ServiceBindingVolumeMount defines model for ServiceBindingVolumeMount.
type ServiceBindingVolumeMount struct {
	ContainerDir string                              `json:"container_dir"`
	Device       ServiceBindingVolumeMountDevice     `json:"device"`
	DeviceType   ServiceBindingVolumeMountDeviceType `json:"device_type"`
	Driver       string                              `json:"driver"`
	Mode         ServiceBindingVolumeMountMode       `json:"mode"`
}

// ServiceBindingVolumeMountDeviceType defines model for ServiceBindingVolumeMount.DeviceType.
type ServiceBindingVolumeMountDeviceType string

// ServiceBindingVolumeMountMode defines model for ServiceBindingVolumeMount.Mode.
type ServiceBindingVolumeMountMode string

// ServiceBindingVolumeMountDevice defines model for ServiceBindingVolumeMountDevice.
type ServiceBindingVolumeMountDevice struct {
	MountConfig *Object `json:"mount_config,omitempty"`
	VolumeId    string  `json:"volume_id"`
}

// ServiceInstanceAsyncOperation defines model for ServiceInstanceAsyncOperation.
type ServiceInstanceAsyncOperation struct {
	DashboardUrl *string                  `json:"dashboard_url,omitempty"`
	Metadata     *ServiceInstanceMetadata `json:"metadata,omitempty"`
	Operation    *string                  `json:"operation,omitempty"`
}

// ServiceInstanceMetadata defines model for ServiceInstanceMetadata.
type ServiceInstanceMetadata struct {
	Attributes *map[string]interface{} `json:"attributes,omitempty"`
	Labels     *map[string]interface{} `json:"labels,omitempty"`
}

// ServiceInstancePreviousValues defines model for ServiceInstancePreviousValues.
type ServiceInstancePreviousValues struct {
	OrganizationId *string `json:"organization_id,omitempty"`
	PlanId         *string `json:"plan_id,omitempty"`
	ServiceId      *string `json:"service_id,omitempty"`
	SpaceId        *string `json:"space_id,omitempty"`
}

// ServiceInstanceProvisionRequestBody defines model for ServiceInstanceProvisionRequestBody.
type ServiceInstanceProvisionRequestBody struct {
	// See [Context Conventions](https://github.com/openservicebrokerapi/servicebroker/blob/master/profile.md#context-object) for more details.
	Context          *Context `json:"context,omitempty"`
	OrganizationGuid string   `json:"organization_guid"`
	Parameters       *Object  `json:"parameters,omitempty"`
	PlanId           string   `json:"plan_id"`
	ServiceId        string   `json:"service_id"`
	SpaceGuid        string   `json:"space_guid"`
}

// ServiceInstanceProvisionResponse defines model for ServiceInstanceProvisionResponse.
type ServiceInstanceProvisionResponse struct {
	DashboardUrl *string                  `json:"dashboard_url,omitempty"`
	Metadata     *ServiceInstanceMetadata `json:"metadata,omitempty"`
}

// ServiceInstanceResource defines model for ServiceInstanceResource.
type ServiceInstanceResource struct {
	DashboardUrl    *string                  `json:"dashboard_url,omitempty"`
	MaintenanceInfo *MaintenanceInfo         `json:"maintenance_info,omitempty"`
	Metadata        *ServiceInstanceMetadata `json:"metadata,omitempty"`
	Parameters      *Object                  `json:"parameters,omitempty"`
	PlanId          *string                  `json:"plan_id,omitempty"`
	ServiceId       *string                  `json:"service_id,omitempty"`
}

// ServiceInstanceSchema defines model for ServiceInstanceSchema.
type ServiceInstanceSchema struct {
	Create *struct {
		Parameters *map[string]interface{} `json:"parameters,omitempty"`
	} `json:"create,omitempty"`
	Update *struct {
		Parameters *map[string]interface{} `json:"parameters,omitempty"`
	} `json:"update,omitempty"`
}

// ServiceInstanceUpdateRequestBody defines model for ServiceInstanceUpdateRequestBody.
type ServiceInstanceUpdateRequestBody struct {
	// See [Context Conventions](https://github.com/openservicebrokerapi/servicebroker/blob/master/profile.md#context-object) for more details.
	Context        *Context                       `json:"context,omitempty"`
	Parameters     *Object                        `json:"parameters,omitempty"`
	PlanId         *string                        `json:"plan_id,omitempty"`
	PreviousValues *ServiceInstancePreviousValues `json:"previous_values,omitempty"`
	ServiceId      string                         `json:"service_id"`
}

// APIVersion defines model for APIVersion.
type APIVersion = string

// OriginatingIdentity defines model for OriginatingIdentity.
type OriginatingIdentity = string

// CatalogGetParams defines parameters for CatalogGet.
type CatalogGetParams struct {
	// version number of the Service Broker API that the Platform will use
	XBrokerAPIVersion APIVersion `json:"X-Broker-API-Version"`
}

// ServiceInstanceDeprovisionParams defines parameters for ServiceInstanceDeprovision.
type ServiceInstanceDeprovisionParams struct {
	// id of the service associated with the instance being deleted
	ServiceId string `form:"service_id" json:"service_id"`

	// id of the plan associated with the instance being deleted
	PlanId string `form:"plan_id" json:"plan_id"`

	// asynchronous deprovision supported
	AcceptsIncomplete *bool `form:"accepts_incomplete,omitempty" json:"accepts_incomplete,omitempty"`

	// version number of the Service Broker API that the Platform will use
	XBrokerAPIVersion APIVersion `json:"X-Broker-API-Version"`

	// identity of the user that initiated the request from the Platform
	XBrokerAPIOriginatingIdentity *OriginatingIdentity `json:"X-Broker-API-Originating-Identity,omitempty"`
}

// ServiceInstanceGetParams defines parameters for ServiceInstanceGet.
type ServiceInstanceGetParams struct {
	// id of the service associated with the instance
	ServiceId *string `form:"service_id,omitempty" json:"service_id,omitempty"`

	// id of the plan associated with the instance
	PlanId *string `form:"plan_id,omitempty" json:"plan_id,omitempty"`

	// version number of the Service Broker API that the Platform will use
	XBrokerAPIVersion APIVersion `json:"X-Broker-API-Version"`

	// identity of the user that initiated the request from the Platform
	XBrokerAPIOriginatingIdentity *OriginatingIdentity `json:"X-Broker-API-Originating-Identity,omitempty"`
}

// ServiceInstanceUpdateJSONBody defines parameters for ServiceInstanceUpdate.
type ServiceInstanceUpdateJSONBody = ServiceInstanceUpdateRequestBody

// ServiceInstanceUpdateParams defines parameters for ServiceInstanceUpdate.
type ServiceInstanceUpdateParams struct {
	// asynchronous operations supported
	AcceptsIncomplete *bool `form:"accepts_incomplete,omitempty" json:"accepts_incomplete,omitempty"`

	// version number of the Service Broker API that the Platform will use
	XBrokerAPIVersion APIVersion `json:"X-Broker-API-Version"`

	// identity of the user that initiated the request from the Platform
	XBrokerAPIOriginatingIdentity *OriginatingIdentity `json:"X-Broker-API-Originating-Identity,omitempty"`
}

// ServiceInstanceProvisionJSONBody defines parameters for ServiceInstanceProvision.
type ServiceInstanceProvisionJSONBody = ServiceInstanceProvisionRequestBody

// ServiceInstanceProvisionParams defines parameters for ServiceInstanceProvision.
type ServiceInstanceProvisionParams struct {
	// asynchronous operations supported
	AcceptsIncomplete *bool `form:"accepts_incomplete,omitempty" json:"accepts_incomplete,omitempty"`

	// version number of the Service Broker API that the Platform will use
	XBrokerAPIVersion APIVersion `json:"X-Broker-API-Version"`

	// identity of the user that initiated the request from the Platform
	XBrokerAPIOriginatingIdentity *OriginatingIdentity `json:"X-Broker-API-Originating-Identity,omitempty"`
}

// ServiceInstanceLastOperationGetParams defines parameters for ServiceInstanceLastOperationGet.
type ServiceInstanceLastOperationGetParams struct {
	// id of the service associated with the instance
	ServiceId *string `form:"service_id,omitempty" json:"service_id,omitempty"`

	// id of the plan associated with the instance
	PlanId *string `form:"plan_id,omitempty" json:"plan_id,omitempty"`

	// a provided identifier for the operation
	Operation *string `form:"operation,omitempty" json:"operation,omitempty"`

	// version number of the Service Broker API that the Platform will use
	XBrokerAPIVersion APIVersion `json:"X-Broker-API-Version"`
}

// ServiceBindingUnbindingParams defines parameters for ServiceBindingUnbinding.
type ServiceBindingUnbindingParams struct {
	// id of the service associated with the instance for which a binding is being deleted
	ServiceId string `form:"service_id" json:"service_id"`

	// id of the plan associated with the instance for which a binding is being deleted
	PlanId string `form:"plan_id" json:"plan_id"`

	// asynchronous operations supported
	AcceptsIncomplete *bool `form:"accepts_incomplete,omitempty" json:"accepts_incomplete,omitempty"`

	// version number of the Service Broker API that the Platform will use
	XBrokerAPIVersion APIVersion `json:"X-Broker-API-Version"`

	// identity of the user that initiated the request from the Platform
	XBrokerAPIOriginatingIdentity *OriginatingIdentity `json:"X-Broker-API-Originating-Identity,omitempty"`
}

// ServiceBindingGetParams defines parameters for ServiceBindingGet.
type ServiceBindingGetParams struct {
	// id of the service associated with the instance
	ServiceId *string `form:"service_id,omitempty" json:"service_id,omitempty"`

	// id of the plan associated with the instance
	PlanId *string `form:"plan_id,omitempty" json:"plan_id,omitempty"`

	// version number of the Service Broker API that the Platform will use
	XBrokerAPIVersion APIVersion `json:"X-Broker-API-Version"`

	// identity of the user that initiated the request from the Platform
	XBrokerAPIOriginatingIdentity *OriginatingIdentity `json:"X-Broker-API-Originating-Identity,omitempty"`
}

// ServiceBindingBindingJSONBody defines parameters for ServiceBindingBinding.
type ServiceBindingBindingJSONBody = ServiceBindingRequest

// ServiceBindingBindingParams defines parameters for ServiceBindingBinding.
type ServiceBindingBindingParams struct {
	// asynchronous operations supported
	AcceptsIncomplete *bool `form:"accepts_incomplete,omitempty" json:"accepts_incomplete,omitempty"`

	// version number of the Service Broker API that the Platform will use
	XBrokerAPIVersion APIVersion `json:"X-Broker-API-Version"`

	// identity of the user that initiated the request from the Platform
	XBrokerAPIOriginatingIdentity *OriginatingIdentity `json:"X-Broker-API-Originating-Identity,omitempty"`
}

// ServiceBindingLastOperationGetParams defines parameters for ServiceBindingLastOperationGet.
type ServiceBindingLastOperationGetParams struct {
	// id of the service associated with the instance
	ServiceId *string `form:"service_id,omitempty" json:"service_id,omitempty"`

	// id of the plan associated with the instance
	PlanId *string `form:"plan_id,omitempty" json:"plan_id,omitempty"`

	// a provided identifier for the operation
	Operation *string `form:"operation,omitempty" json:"operation,omitempty"`

	// version number of the Service Broker API that the Platform will use
	XBrokerAPIVersion APIVersion `json:"X-Broker-API-Version"`
}

// ServiceInstanceUpdateJSONRequestBody defines body for ServiceInstanceUpdate for application/json ContentType.
type ServiceInstanceUpdateJSONRequestBody = ServiceInstanceUpdateJSONBody

// ServiceInstanceProvisionJSONRequestBody defines body for ServiceInstanceProvision for application/json ContentType.
type ServiceInstanceProvisionJSONRequestBody = ServiceInstanceProvisionJSONBody

// ServiceBindingBindingJSONRequestBody defines body for ServiceBindingBinding for application/json ContentType.
type ServiceBindingBindingJSONRequestBody = ServiceBindingBindingJSONBody
